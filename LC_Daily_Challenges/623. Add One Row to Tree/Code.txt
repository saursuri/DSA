'''cpp
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {

        if (depth == 1) {
            // Create a new node
            TreeNode* newNode = new TreeNode(val);
            newNode->left = root;
            return newNode;
        }

        queue<TreeNode*> q;

        // Push the node
        q.push(root);

        int localDepth = 0;
        while (!q.empty()) {
            int qSize = q.size();
            localDepth++;

            for (int i = 0; i < qSize; i++) {
                TreeNode* topElem = q.front();
                q.pop();

                if (localDepth == depth - 1) {
                    TreeNode* l = new TreeNode(val);
                    TreeNode* r = new TreeNode(val);

                    l->left = topElem->left;
                    r->right = topElem->right;

                    topElem->left = l;
                    topElem->right = r;
                }

                if (topElem->left)
                    q.push(topElem->left);

                if (topElem->right)
                    q.push(topElem->right);
            }
        }

        return root;
    }
};
'''
